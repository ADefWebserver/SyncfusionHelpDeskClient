@using System.Security.Claims;
@using Syncfusion.Blazor.DropDowns
@using SyncfusionHelpDeskClient.Shared
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory

<div>
    <SfDropDownList TItem="HelpDeskStatus" Enabled="!isReadOnly"
                    TValue="string" PopupHeight="230px" 
                    Placeholder="Ticket Status"
                    DataSource="@HelpDeskStatus.Statuses"
                    FloatLabelType="@FloatLabelType.Always"
                    @bind-Value="@SelectedTicket.TicketStatus">
        <DropDownListFieldSettings Text="Text"
                                   Value="ID">
        </DropDownListFieldSettings>
    </SfDropDownList>
</div>
<div>
    <SfDatePicker ID="TicketDate" Enabled="!isReadOnly"
                  Placeholder="Ticket Date"
                  FloatLabelType="@FloatLabelType.Always"
                  @bind-Value="@SelectedTicket.TicketDate"
                  Max="DateTime.Now"
                  ShowClearButton="false">
    </SfDatePicker>
</div>
<div>
    <SfTextBox Enabled="!isReadOnly" Placeholder="Ticket Description"
               FloatLabelType="@FloatLabelType.Always"
               @bind-Value="@SelectedTicket.TicketDescription">
    </SfTextBox>
</div>
<div>
    <SfTextBox Enabled="!isReadOnly" Placeholder="Requester Email"
               FloatLabelType="@FloatLabelType.Always"
               @bind-Value="@SelectedTicket.TicketRequesterEmail">
    </SfTextBox>
</div>
@if (SelectedTicket.HelpDeskTicketDetails != null)
{
    @if (SelectedTicket.HelpDeskTicketDetails.Count() > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var TicketDetail in
               SelectedTicket.HelpDeskTicketDetails)
                {
                    <tr>
                        <td>
                            @TicketDetail.TicketDetailDate.ToShortDateString()
                        </td>
                        <td>
                            @TicketDetail.TicketDescription
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <SfTextBox Placeholder="NewHelp Desk Ticket Detail"
           @bind-Value="@NewHelpDeskTicketDetailText">
    </SfTextBox>
    <SfButton CssClass="e-small e-success"
          @onclick="AddHelpDeskTicketDetail">
        Add
    </SfButton>
}
<br />
@code {
    #nullable disable
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    public HelpDeskTicket SelectedTicket { get; set; }

    public bool isReadOnly = true;
    ClaimsPrincipal CurrentUser = new ClaimsPrincipal();

    string NewHelpDeskTicketDetailText = "";

    protected override async Task OnInitializedAsync()
    {
        // Get the current user.
        CurrentUser = (await authenticationStateTask).User;

        // If there is a logged in user
        // they are an Administrator.
        // Enable editing.
        isReadOnly = !CurrentUser.Identity.IsAuthenticated;
    }

    private void AddHelpDeskTicketDetail()
    {
        // Create New HelpDeskTicketDetails record.
        HelpDeskTicketDetail NewHelpDeskTicketDetail =
            new HelpDeskTicketDetail();

        NewHelpDeskTicketDetail.HelpDeskTicketId =
        SelectedTicket.Id;

        NewHelpDeskTicketDetail.TicketDetailDate =
        DateTime.Now;

        NewHelpDeskTicketDetail.TicketDescription =
        NewHelpDeskTicketDetailText;

        // Add to collection.
        SelectedTicket.HelpDeskTicketDetails
            .Add(NewHelpDeskTicketDetail);

        // Clear the Text Box.
        NewHelpDeskTicketDetailText = "";
    }
}