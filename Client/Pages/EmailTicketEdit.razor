@page "/emailticketedit/{TicketGuid}"
@using SyncfusionHelpDeskClient.Shared
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory

<div id="target" style="height: 500px;">
    @if (!EditDialogVisibility)
    {
        <h2>Your response has been saved</h2>
        <h4>Thank You!</h4>
    }
</div>
<SfDialog Target="#target"
              Width="500px"
              Height="500px"
              IsModal="true"
              ShowCloseIcon="false"
              @bind-Visible="EditDialogVisibility">
    <DialogTemplates>
        <Header> EDIT TICKET # @SelectedTicket.Id</Header>
        <Content>
            <EditTicket SelectedTicket="@SelectedTicket" />
        </Content>
        <FooterTemplate>
            <div class="button-container">
                <button type="submit"
                        class="e-btn e-normal e-primary"
                        @onclick="SaveTicket">
                    Save
                </button>
            </div>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>

@code {
    #nullable disable
    [Parameter] public string TicketGuid { get; set; }

    HttpClient NoAuthenticationClient;
    private HelpDeskTicket SelectedTicket = new HelpDeskTicket();
    private bool EditDialogVisibility = true;

    protected override async Task
        OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Create a httpClient to use for non-authenticated calls.
            NoAuthenticationClient =
                 ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");

            // Get the Help Desk Ticket associated with
            // the GUID that was passed to the control.
            SelectedTicket =
            await NoAuthenticationClient.GetFromJsonAsync<HelpDeskTicket>(
                "Email?HelpDeskTicketGuid=" + TicketGuid);

            StateHasChanged();
        }
    }

    public async Task SaveTicket()
    {
        // Save the Help Desk Ticket.
        await NoAuthenticationClient.PutAsJsonAsync(
            "SyncfusionHelpDesk", SelectedTicket);

        // Close the Dialog.
        EditDialogVisibility = false;

        // Send Email.
        HelpDeskEmail objHelpDeskEmail = new HelpDeskEmail();
        objHelpDeskEmail.EmailType = "Help Desk Ticket Updated";
        objHelpDeskEmail.EmailAddress = SelectedTicket.TicketRequesterEmail;
        objHelpDeskEmail.TicketGuid = SelectedTicket.TicketGuid;

        await NoAuthenticationClient.PostAsJsonAsync(
        "Email", objHelpDeskEmail);

        return;
    }
}